{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,SAAS,gBAAgB,CAAC,mBAAoB,YA4C5C,AA3C4B,WAC1B,IAAM,EAAO,SAAS,aAAa,CAAC,SAEpC,GAAI,EAAM,CACR,IAAM,EAAoB,SAAS,aAAa,CAAC,uBAC3C,EAAkB,SAAS,aAAa,CAAC,qBACzC,EAAc,EAAK,gBAAgB,CAAC,eACpC,EAAQ,EAAK,gBAAgB,CAAC,eAE9B,EAAW,WACf,MAAQ,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,EAAG,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,EAAA,I,A,W,M,A,U,wI,G,EAAa,MAAM,CAAC,SAAC,CAAA,CAAG,CAAnC,EACE,OAAO,GAAI,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,GAC5C,EAAG,EACL,EAIM,EAAe,SAAC,CAAtB,EAAiC,OAAA,EAAO,cAAc,CAAC,Q,EAEjD,EAAgB,SAAC,CAAA,CAAY,CAAnC,EACE,EAAM,WAAW,CAAG,CACtB,EAME,EAFY,EADE,KAGK,GAQnB,EAFY,EAlBiB,AAgBf,IAhBwB,EAAM,MAAM,EAoB/B,EAKvB,CACF,GAGF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var calcPopulationsInit = function() {\n        var list = document.querySelector(\".list\");\n        if (list) {\n            var averagePopulation = document.querySelector(\".average-population\");\n            var totalPopulation = document.querySelector(\".total-population\");\n            var populations = list.querySelectorAll(\".population\");\n            var items = list.querySelectorAll(\".list__item\");\n            var getTotal = function() {\n                return _to_consumable_array(populations).reduce(function(a, b) {\n                    return a + +b.textContent.split(\",\").join(\"\");\n                }, 0);\n            };\n            var getAverage = function(number) {\n                return number / items.length;\n            };\n            var formatNumber = function(number) {\n                return number.toLocaleString(\"en-US\");\n            };\n            var setPopulation = function(population, block) {\n                block.textContent = population;\n            };\n            var calcTotal = function() {\n                var total = getTotal();\n                var res = formatNumber(total);\n                setPopulation(res, totalPopulation);\n            };\n            var calcAverage = function() {\n                var total = getTotal();\n                var average = getAverage(total);\n                var res = formatNumber(average);\n                setPopulation(res, averagePopulation);\n            };\n            calcTotal();\n            calcAverage();\n        }\n    };\n    calcPopulationsInit();\n});\n\n//# sourceMappingURL=index.3bf6652c.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const calcPopulationsInit = () => {\n    const list = document.querySelector('.list');\n\n    if (list) {\n      const averagePopulation = document.querySelector('.average-population');\n      const totalPopulation = document.querySelector('.total-population');\n      const populations = list.querySelectorAll('.population');\n      const items = list.querySelectorAll('.list__item');\n\n      const getTotal = () => {\n        return [...populations].reduce((a, b) => {\n          return a + +b.textContent.split(',').join('');\n        }, 0);\n      };\n\n      const getAverage = (number) => number / items.length;\n\n      const formatNumber = (number) => number.toLocaleString('en-US');\n\n      const setPopulation = (population, block) => {\n        block.textContent = population;\n      };\n\n      const calcTotal = () => {\n        const total = getTotal();\n        const res = formatNumber(total);\n\n        setPopulation(res, totalPopulation);\n      };\n\n      const calcAverage = () => {\n        const total = getTotal();\n        const average = getAverage(total);\n        const res = formatNumber(average);\n\n        setPopulation(res, averagePopulation);\n      };\n\n      calcTotal();\n      calcAverage();\n    }\n  };\n\n  calcPopulationsInit();\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","document","addEventListener","calcPopulationsInit","list","querySelector","averagePopulation","totalPopulation","populations","querySelectorAll","items","getTotal","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","reduce","a","b","textContent","split","join","formatNumber","number","toLocaleString","setPopulation","population","block"],"version":3,"file":"index.3bf6652c.js.map"}